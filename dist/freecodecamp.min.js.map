{"version":3,"sources":["freecodecamp.min.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","App","clickCounter","quotes","getQuote","URL","fetch","method","headers","Headers","X-Mashape-Key","then","response","json","data","push","bind","handleClick","targetDiv","document","getElementById","author","innerHTML","quote","setupTweet","setRandomColors","getRGBvalue","Math","floor","random","backgroundColor","body","style","content","share","querySelector","setAttribute","window","onload"],"mappings":"CAAA,SAA2CA,EAAMC,GAC1B,gBAAZC,UAA0C,gBAAXC,QACxCA,OAAOD,QAAUD,IACQ,kBAAXG,SAAyBA,OAAOC,IAC9CD,UAAWH,GACe,gBAAZC,SACdA,QAAsB,aAAID,IAE1BD,EAAmB,aAAIC,KACtBK,KAAM,WACT,MAAgB,UAAUC,GAKhB,QAASC,GAAoBC,GAG5B,GAAGC,EAAiBD,GACnB,MAAOC,GAAiBD,GAAUP,OAGnC,IAAIC,GAASO,EAAiBD,IAC7BP,WACAS,GAAIF,EACJG,QAAQ,EAUT,OANAL,GAAQE,GAAUI,KAAKV,EAAOD,QAASC,EAAQA,EAAOD,QAASM,GAG/DL,EAAOS,QAAS,EAGTT,EAAOD,QAvBf,GAAIQ,KAqCJ,OATAF,GAAoBM,EAAIP,EAGxBC,EAAoBO,EAAIL,EAGxBF,EAAoBQ,EAAI,GAGjBR,EAAoB,KAK/B,SAASL,EAAQD,GAEtB,YAEA,IAAIe,IACFC,aAAc,EACdC,UACAC,SAAU,WACR,GAAIC,GAAM,kEACVC,OAAMD,GACJE,OAAQ,MACRC,QAAS,GAAIC,UAAUC,gBAAiB,yDACvCC,KAAK,SAAUC,GAChB,MAAOA,GAASC,SACfF,KAAK,SAAUG,GAChBxB,KAAKa,OAAOY,KAAKD,IACjBE,KAAK1B,QAET2B,YAAa,WACX,GAAIC,GAAYC,SAASC,eAAe,SACpCC,EAASF,SAASC,eAAe,SACrC9B,MAAKc,WACLc,EAAUI,UAAYhC,KAAKa,OAAOb,KAAKY,cAAcqB,MACrDF,EAAOC,UAAY,KAAOhC,KAAKa,OAAOb,KAAKY,cAAcmB,OACzD/B,KAAKkC,aACLlC,KAAKmC,kBACLnC,KAAKY,gBAEPwB,YAAa,WACX,MAAOC,MAAKC,MAAsB,IAAhBD,KAAKE,UAAkB,KAE3CJ,gBAAiB,WACf,GAAIK,GAAkBX,SAASY,IAC/BD,GAAgBE,MAAMF,gBAAkB,OAASxC,KAAKoC,cAAgB,IAAMpC,KAAKoC,cAAgB,KAAOpC,KAAKoC,cAAgB,KAE/HF,WAAY,WACV,GAAIS,GAAUd,SAASC,eAAe,SAASE,UAC3CY,EAAQf,SAASgB,cAAc,IACnCD,GAAME,aAAa,OAAQ,kCAAoCH,IAInEI,QAAOC,OAASrC,EAAIG","file":"freecodecamp.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"freeCodeCamp\"] = factory();\n\telse\n\t\troot[\"freeCodeCamp\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tvar App = {\n\t  clickCounter: 0,\n\t  quotes: [],\n\t  getQuote: function getQuote() {\n\t    var URL = 'https://andruxnet-random-famous-quotes.p.mashape.com/?cat=movies';\n\t    fetch(URL, {\n\t      method: 'GET',\n\t      headers: new Headers({ 'X-Mashape-Key': 'VX2byySRsJmshOGnZtVwLVW1ymWwp143BhvjsnEhKJnBQDcrrb' })\n\t    }).then(function (response) {\n\t      return response.json();\n\t    }).then(function (data) {\n\t      this.quotes.push(data);\n\t    }.bind(this));\n\t  },\n\t  handleClick: function handleClick() {\n\t    var targetDiv = document.getElementById('quote');\n\t    var author = document.getElementById('author');\n\t    this.getQuote();\n\t    targetDiv.innerHTML = this.quotes[this.clickCounter].quote;\n\t    author.innerHTML = '- ' + this.quotes[this.clickCounter].author;\n\t    this.setupTweet();\n\t    this.setRandomColors();\n\t    this.clickCounter++;\n\t  },\n\t  getRGBvalue: function getRGBvalue() {\n\t    return Math.floor(Math.random() * 255) - 100;\n\t  },\n\t  setRandomColors: function setRandomColors() {\n\t    var backgroundColor = document.body;\n\t    backgroundColor.style.backgroundColor = 'rgb(' + this.getRGBvalue() + ',' + this.getRGBvalue() + ' ,' + this.getRGBvalue() + ')';\n\t  },\n\t  setupTweet: function setupTweet() {\n\t    var content = document.getElementById('quote').innerHTML;\n\t    var share = document.querySelector('a');\n\t    share.setAttribute('href', 'https://twitter.com/share?text=' + content);\n\t  }\n\t};\n\t\n\twindow.onload = App.getQuote();\n\n/***/ }\n/******/ ])\n});\n;\n"],"sourceRoot":"/source/"}