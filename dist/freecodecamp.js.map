{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 4b6eda64007cf11afcf7","webpack:///./src/freecodecamp.js"],"names":["App","clickCounter","quotes","getQuote","URL","fetch","method","headers","Headers","then","response","json","data","push","bind","handleClick","targetDiv","document","getElementById","author","innerHTML","quote","setupTweet","setRandomColors","getRGBvalue","Math","floor","random","backgroundColor","body","style","content","share","querySelector","setAttribute","window","onload"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;ACtCA,KAAMA,MAAM;AACVC,iBAAc,CADJ;AAEVC,WAAQ,EAFE;AAGVC,WAHU,sBAGC;AACT,SAAMC,MAAM,kEAAZ;AACAC,WAAMD,GAAN,EAAW;AACTE,eAAQ,KADC;AAETC,gBAAS,IAAIC,OAAJ,CAAa,EAAC,iBAAiB,oDAAlB,EAAb;AAFA,MAAX,EAGGC,IAHH,CAGQ,UAASC,QAAT,EAAmB;AACzB,cAAOA,SAASC,IAAT,EAAP;AACD,MALD,EAKGF,IALH,CAKQ,UAASG,IAAT,EAAc;AAAC,YAAKV,MAAL,CAAYW,IAAZ,CAAiBD,IAAjB;AAAuB,MAAtC,CAAuCE,IAAvC,CAA4C,IAA5C,CALR;AAMA,IAXQ;AAaVC,cAbU,yBAaI;AACZ,SAAIC,YAAYC,SAASC,cAAT,CAAwB,OAAxB,CAAhB;AACA,SAAIC,SAASF,SAASC,cAAT,CAAwB,QAAxB,CAAb;AACA,UAAKf,QAAL;AACAa,eAAUI,SAAV,GAAsB,KAAKlB,MAAL,CAAY,KAAKD,YAAjB,EAA+BoB,KAArD;AACAF,YAAOC,SAAP,GAAmB,OAAO,KAAKlB,MAAL,CAAY,KAAKD,YAAjB,EAA+BkB,MAAzD;AACA,UAAKG,UAAL;AACA,UAAKC,eAAL;AACA,UAAKtB,YAAL;AACD,IAtBS;AAwBVuB,cAxBU,yBAwBI;AACZ,YAAOC,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgB,GAA3B,IAAkC,GAAzC;AACD,IA1BS;AA4BVJ,kBA5BU,6BA4BQ;AAChB,SAAIK,kBAAkBX,SAASY,IAA/B;AACAD,qBAAgBE,KAAhB,CAAsBF,eAAtB,YAA+C,KAAKJ,WAAL,EAA/C,SAAqE,KAAKA,WAAL,EAArE,UAA4F,KAAKA,WAAL,EAA5F;AACD,IA/BS;AAiCVF,aAjCU,wBAiCG;AACX,SAAIS,UAAUd,SAASC,cAAT,CAAwB,OAAxB,EAAiCE,SAA/C;AACA,SAAIY,QAAQf,SAASgB,aAAT,CAAuB,GAAvB,CAAZ;AACAD,WAAME,YAAN,CAAmB,MAAnB,sCAA6DH,OAA7D;AACD;AArCS,EAAZ;;AAwCAI,QAAOC,MAAP,GAAgBpC,IAAIG,QAAJ,EAAhB,C","file":"freecodecamp.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"freeCodeCamp\"] = factory();\n\telse\n\t\troot[\"freeCodeCamp\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 4b6eda64007cf11afcf7\n **/","const App = {\n  clickCounter: 0,\n  quotes: [],\n  getQuote() {\n    const URL = 'https://andruxnet-random-famous-quotes.p.mashape.com/?cat=movies'\n    fetch(URL, {\n      method: 'GET',\n      headers: new Headers ({'X-Mashape-Key': 'VX2byySRsJmshOGnZtVwLVW1ymWwp143BhvjsnEhKJnBQDcrrb'})\n    }).then(function(response) {\n      return response.json();\n    }).then(function(data){this.quotes.push(data)}.bind(this))\n   },\n\n  handleClick() {\n    let targetDiv = document.getElementById('quote');\n    let author = document.getElementById('author');\n    this.getQuote();\n    targetDiv.innerHTML = this.quotes[this.clickCounter].quote;\n    author.innerHTML = '- ' + this.quotes[this.clickCounter].author;\n    this.setupTweet()\n    this.setRandomColors()\n    this.clickCounter++\n  },\n\n  getRGBvalue() {\n    return Math.floor(Math.random() * 255) - 100;\n  },\n\n  setRandomColors() {\n    let backgroundColor = document.body;\n    backgroundColor.style.backgroundColor = `rgb(${this.getRGBvalue()},${this.getRGBvalue()} ,${this.getRGBvalue()})`\n  },\n\n  setupTweet() {\n    let content = document.getElementById('quote').innerHTML;\n    let share = document.querySelector('a')\n    share.setAttribute('href', `https://twitter.com/share?text=${content}`)\n  }\n}\n\nwindow.onload = App.getQuote()\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/freecodecamp.js\n **/"],"sourceRoot":""}